{
	"name": "dataflow_project",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Project_data",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Project_data",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "select"
				}
			],
			"scriptLines": [
				"source(output(",
				"          invoice_no as string,",
				"          customer_id as string,",
				"          gender as string,",
				"          age as integer,",
				"          category as string,",
				"          quantity as integer,",
				"          price as long,",
				"          payment_method as string,",
				"          invoice_date as date,",
				"          shopping_mall as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source select(mapColumn(",
				"          invoice_no,",
				"          customer_id,",
				"          gender,",
				"          age,",
				"          category,",
				"          quantity,",
				"          price,",
				"          payment_method,",
				"          invoice_date,",
				"          shopping_mall",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          invoice_no as string,",
				"          customer_id as string,",
				"          gender as string,",
				"          age as string,",
				"          category as string,",
				"          quantity as string,",
				"          price as string,",
				"          payment_method as string,",
				"          invoice_date as string,",
				"          shopping_mall as string",
				"     ),",
				"     partitionFileNames:['new.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink"
			]
		}
	}
}